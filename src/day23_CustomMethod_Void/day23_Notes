Java Day23
Topics: Custom Method Intro:
			Void method


package name: day23_CustomMethods_Void


Array: one of the three data structures
		size is fixed
		supports primitives & non-primitives
		can be multi-dimensional


	one dimensional array: array of elements
			[index Of Elements]

	multi-dimensional array: array of arrays. two or more dimensional ([][]..)
			[index of Arrays][index Of Elements]
			[][][]
			.....

			n dimensional array contains (n-1) dimensional array


Arrays: utility class for array. in "java.util" package

		toString()
		deepToString()
		sort()
		equals()
		copyOf()
		copyOfRange()


String methods:
	toCharArray()
	split()


for each loop: already iterated
			    iteration order is fixed

			    THERE MUST BE A DATA STRUCTURE

			    for(DataType variable : Array){

			    }




Task:
		step1 : reverse "Java"
		....

		step5: reverse "python"
		...


		step10: reverse "Cydeo"
		...




Method: Function --> MEMORIZE BELOW INFO:



		public  static  void  main(String[] args){

		}

	declaring a method:

		Access-Modifier	 Specifier	  ReturnType     MethodName(Parameter){

		}

		Access modifiers: public, protected, default, private  - determines the visibility, public is open to the world and always accessible

		Specifier:  static, final, abstract, synchronized - allows us to call the method through the class name

		Return Type: void, Any Data Type - displays the output

		Method Name: can be any name

		parameter: Any Data Type - lets us pass the argument


Custom Methods:
	1. void methods
	2. void methods with arguments
	3. return methods
	4. returns with argument
	5. overloading



create a function that can print all the numbers between X and Y
















